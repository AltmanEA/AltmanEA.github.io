<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Введение on Информационные технологии (часть 2)</title>
    <link>https://altmanea.ru/it2/</link>
    <description>Recent content in Введение on Информационные технологии (часть 2)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language><atom:link href="https://altmanea.ru/it2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Рабочая тетрадь</title>
      <link>https://altmanea.ru/it2/lecture/workbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/workbook/</guid>
      <description>Содержание На каждой странице рабочей тетради необходимо написать свою фамилию и группу. Перед каждым занятием на полях или в отдельной строке по центру тетради нужно поставить его дату.
В рабочую тетрадь заносится конспект лекций и ответы на вопросы проводимой на лекции проверочной работы.
В конспект лекций записываются название видео и его основные идеи (тезисы). При необходимости, после просмотра видео на лекции можно уточнить правильность понимания сказанного у преподавателя.
Вопросы проверочной работы и ответы на них записываются в ту же тетрадь, что и конспект лекций.</description>
    </item>
    
    <item>
      <title>1. Установка Ubuntu на виртуальную машину</title>
      <link>https://altmanea.ru/it2/labs/vm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/vm/</guid>
      <description>Введение Целью данной лабораторной работы является знакомство с основами работы с виртуальными машинами и графическим интерфейсом операционной системы Ubuntu.
Установка VirtualBox Скачайте последнюю версию дистрибутива (platform package) VirtualBox для своей операционной системы и установите его. При установке согласитесь на установку дополнительных сетевых драйверов и пакета VirtualBox Extension Pack.
Создание виртуальной машины с операционной системой Ubuntu. Скачайте со страницы https://www.osboxes.org/ubuntu/ образ виртуальной машины с установленной операционной системой Ubuntu. Поскольку на этой страницы выкладываются образы, в том числе, и тестовых сборок, рекомендуется посмотреть список версий Ubuntu и скачать текущую версию.</description>
    </item>
    
    <item>
      <title>1. Установка Ubuntu на виртуальную машину</title>
      <link>https://altmanea.ru/it2/lecture/vm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/vm/</guid>
      <description>Подготовка к установке Создание виртуальной машины Определение термина виртуальная машина Русификация Ubuntu </description>
    </item>
    
    <item>
      <title>2. Взаимодействие виртуальной и физической машины в VirtualBox</title>
      <link>https://altmanea.ru/it2/lecture/share/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/share/</guid>
      <description>Тестовый веб-сервер на Python. Настройка сетевых портов. Общая папка в VirtualBox. Права доступа в Linux. Доступ к общей папке VirtualBox из Linux. Работа с общей папкой VirtualBox. </description>
    </item>
    
    <item>
      <title>2. Взаимодействие гостевой ОС и хоста</title>
      <link>https://altmanea.ru/it2/labs/share/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/share/</guid>
      <description>Введение Целью данной лабораторной работы изучение принципов взаимодействия виртуальной и физической машин.
Запуск веб-сервера  Совет: для того, чтобы копировать текст команд с физической машины на виртуальную включите двунаправленный обмен в меню виртуальной машины «Устройства»-«Общий буфер обмена».
 В терминале виртуальной машины выполните команду:
python3 -m http.server 8080
Данная команда запустить веб-сервер, который будет выдавать по протоколу http содержимое текущей папки. Она закончит свое выполнение только после явной остановки сервера (например, с помощью сочетания клавиш Ctrl-C).</description>
    </item>
    
    <item>
      <title>3. Основы docker</title>
      <link>https://altmanea.ru/it2/labs/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/docker/</guid>
      <description>Введение Целью данной лабораторной работы является знакомство с программой docker.
Установка docker Прочитайте про инструментарий для установки программ Advanced Packaging Tool и консольный интерфейс к этом инструментарию Apt-Get.
Далее, в связи с изменением инструкции по установке docker на сайте docker, будет рассмотрен способ установки, отличный от предлагаемого ранее на этой странице. Если Вы уже выполнили эту лабораторную работу с помощью старого способа, то при оформлении отчета и защиты работы можете его использовать, его описание – под спойлером.</description>
    </item>
    
    <item>
      <title>3. Основы docker</title>
      <link>https://altmanea.ru/it2/lecture/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/docker/</guid>
      <description>Введение в docker. Менеджер пакетов apt. Установка docker. Замечания по установке docker. Работа с образами. </description>
    </item>
    
    <item>
      <title>4. Настройка ресурсов контейнеров docker</title>
      <link>https://altmanea.ru/it2/labs/container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/container/</guid>
      <description>Введение Целью данной лабораторной работы является изучение взаимодействия контейнеров docker с операционной системой.
Создание общей папки для контейнера Скачайте образ docker, содержащий средства разработки под linux:
sudo docker pull gccЗапустите этот контейнер указав следующие ключи:
-it -v /home/osboxes/server:/home/osboxesКлюч -v создает общую папку, доступную на виртуальной машине по пути /home/osboxes/server, а в контейнере по пути /home/osboxes.
На физическом компьютере или виртуальной машине создайте файл hello.c со следующим содержимым:
 #include &amp;quot;stdio.</description>
    </item>
    
    <item>
      <title>4. Настройка ресурсов контейнеров docker</title>
      <link>https://altmanea.ru/it2/lecture/container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/container/</guid>
      <description>Создание папки для контейнера docker. Общий исходный код для Windows и контейнера docker. Настройка порта для сервера в контейнере. Виртуальная сеть контейнеров docker. Сетевое взаимодействие (клонирование репозитория) между контейнерами. </description>
    </item>
    
    <item>
      <title>5. Основы GIT</title>
      <link>https://altmanea.ru/it2/labs/git-basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/git-basic/</guid>
      <description>Теоретические сведения Терминология Система контроля версий (СКВ, англ. Version Control System, VCS, переводится также как система управления версий) – система, позволяющая хранить все версии документов и переключаться между этими версиями. Современные СКВ позволяют также организовать совместную работу над документами, анализировать изменения в них, использовать части документов в различных проектах и другие полезные действия.
Репозиторий (Repository) – группа файлов и каталогов, относящихся к одному проекту, в рамках которого создается какой-либо документ или программа.</description>
    </item>
    
    <item>
      <title>5. Основы GIT</title>
      <link>https://altmanea.ru/it2/lecture/git-basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/git-basic/</guid>
      <description>Введение в системы контроля версий. Терминология систем контроля версий. Команды git для изменения состояния файлов. Команды git для отмены изменений состояния файлов. Команды git для просмотра и изменения зафиксированных состояний (commits). </description>
    </item>
    
    <item>
      <title>6. Ветки в GIT</title>
      <link>https://altmanea.ru/it2/labs/git-branch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/git-branch/</guid>
      <description>Теоретические сведения Ветки и указатели на коммиты При работе над проектами часто возникает ситуация при которой существует несколько вариантов проекта. Например, один вариант – это текущая версия проекта, другой вариант – это версия, в которую внесены экспериментальные или логически не завершенные элементы. Особенно часто возникают различные варианты проекта при работе над ним нескольких разработчиков.
В СКВ различные варианты проекта хранятся в различных ветках (branch).
При создании проекта существует только одна ветка (один вариант проекта), которая называется master.</description>
    </item>
    
    <item>
      <title>6. Ветки в GIT</title>
      <link>https://altmanea.ru/it2/lecture/git-branch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/git-branch/</guid>
      <description>Понятие веток в системах контроля версий. Создание веток и переход между ними. Отмена операций с ветками и коммитами. </description>
    </item>
    
    <item>
      <title>7. Объединение веток</title>
      <link>https://altmanea.ru/it2/labs/git-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/git-merge/</guid>
      <description>Теоретические сведения Слияние веток Основная цель создание дополнительных веток – проработать отдельный элемент проекта автономно а затем присоединить его к проекту. Поэтому в большинстве случаев эти ветки в конечном итоге объединяются с веткой master. Процедура объединения веток называется слияние (merge).
Для слияния текущей ветки с какой-либо другой используется команда
git merge имя_веткиВ результате выполнения этой команды в текущей ветке появится новый коммит. Этот коммит будет иметь два предка – последние коммиты обоих веток, участвующих в слиянии.</description>
    </item>
    
    <item>
      <title>7. Объединение веток в GIT</title>
      <link>https://altmanea.ru/it2/lecture/git-remote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/git-remote/</guid>
      <description>Слияние веток. Разрешение конфликта при слиянии веток. Перебазирование веток. Разрешение конфликтов при перебазировании веток. </description>
    </item>
    
    <item>
      <title>8. Удаленные ветки в GIT</title>
      <link>https://altmanea.ru/it2/lecture/git-merge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/git-merge/</guid>
      <description>Создание удаленных веток. Выборка и выкладывание коммитов в удаленные ветки. Разрешение конфликтов в удаленных ветках. Работа с несколькими удаленными ветками. </description>
    </item>
    
    <item>
      <title>8. Удаленные репозитории</title>
      <link>https://altmanea.ru/it2/labs/git-remote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/git-remote/</guid>
      <description>Теоретические сведения Современные проекты во многих случаях выполняются командой разработчиков. Для поддерживание согласованного состояния репозиториев команды обычно используется сервер, который хранить центральный репозиторий.
СКВ git содержит команды для согласования работы репозиториев (клонирование, синхронизация изменений и др.). Кроме того, специальные серверные системы СКВ на основе git, такие как, например, github.com, предоставляют дополнительные возможности по управлению рабочим процессом создания проекта.
Создание репозитория на серверах, таких как github.com, производится в web-интерфейсе. Как правило, такой интерфейс содержит в себе инструкцию, достаточную для того, чтобы работать с репозиторием.</description>
    </item>
    
    <item>
      <title>9. Виртуальная машина Java</title>
      <link>https://altmanea.ru/it2/lecture/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/lecture/java/</guid>
      <description>Установка Java под Linux. Настройка Java, ссылки в Linux. Компиляция простой программы для Java. Обзор примера объектно-ориентированной программы для Java. Сборка и запуск jar файла для Java. Обзор формата jar файла для Java. Обзор реализаций виртуальной машины Java. </description>
    </item>
    
    <item>
      <title>9. Платформа Java</title>
      <link>https://altmanea.ru/it2/labs/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/java/</guid>
      <description>Установка  Мы будем устанавливать JDK (Java Development Kit, набор для разработки на Java). В состав этого набора входит JRE (Java Runtime Environment, окружение для выполнения Javа, собственно платформа). Если необходимо только запускать программы, то можно установить только JRE.
 Под Windows  Далее предполагается, что на компьютере, на котором выполняются лабораторные работы, установленна ОС Windows. Если это не так, то часть работы, относящуюся к этой ОС можно выполнить на виртуальной машине.</description>
    </item>
    
    <item>
      <title>10. Сборка кроссплатформенных программ</title>
      <link>https://altmanea.ru/it2/labs/cmake/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/it2/labs/cmake/</guid>
      <description>Программы для сборки Для сборки под Windows потребуются инструменты Build Tools для Visual Studio 2019, которые можно найти на странице https://visualstudio.microsoft.com/ru/downloads/. Также потребуется программа для конфигурации сборки cmake. Для сборки в командной строке предварительно нужно запустить командный файл для Visual Studio Developer Command Prompt (в 2019 версии это команда C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\Common7\Tools\vsdevcmd).
Для сборки под Linux рекомендуется запускать следующий контейнер docker:
sudo docker run -it -v 𝘴𝘩𝘢𝘳𝘦𝘥_𝘧𝘰𝘭𝘥𝘦𝘳:/usr/src/myapp rikorose/gcc-cmakeПример программы В общей папке для компьютеров с операционными системами Linux и Windows (один или оба компьютера – виртуальные машины) создайте папку с проектом и разместите в ней следующие исходные коды:</description>
    </item>
    
  </channel>
</rss>
